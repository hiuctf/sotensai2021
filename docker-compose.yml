version: "3.5"

services:
  ctfd:
    container_name: ctfd
    hostname: ctfd
    build: ./ctfd
    volumes:
      - ctfd_data:/CTFd/CTFd
      - ./CTFd/plugins:/opt/CTFd/CTFd/plugins
      - ./CTFd/themes:/pt/CTFd/CTFd/themes
    ports:
      - 8000:8000
    environment:
      TZ: "Asia/Tokyo"
    networks:
      - backend
    
  ssl:
    container_name: ssl_offloader
    hostname: haproxy
    build: ssl
    volumes:
      - ./ssl/config:/usr/local/etc/haproxy
      - lets_encrypt:/etc/letsencrypt
    networks:
      - backend
      - frontend
      - challenge
    ports:
      - 80:80
      - 443:443
    environment:
      CTFD_FQDN: ${CERT_FQDN}

  lets_encrypt:
    container_name: certbot
    hostname: certbot
    # on olacle arm vm 
    #image: certbot/certbot:arm64v8-latest
    #image: certbot/certbot
    build: lets_encrypt
    # 複数ドメインは非対応
    #entrypoint: /bin/sh entrypoint.sh
    volumes:
      - lets_encrypt:/etc/letsencrypt
      - logs:/var/log
      #- web_content:/var/www/html
    # docker-compose run --service-ports lets_encrypt
    #ports:
    #  - "80:80"
    networks:
      - frontend
    environment:
      CERT_FQDN: ${CERT_FQDN}
      CERT_EMAIL: ${CERT_EMAIL}
      CERT_OPTION: ${CERT_OPTION}
      #CERTFILE_DIR: /etc/letsencrypt
    #depends_on:
      # ルーティング完了まで待ってくれない可能性があるのでssl側でシェルスクリプト必要かもしれない
    #  - ssl
  
  web-static:
    hostname: web-static
    image: nginx
    restart: always
    networks:
      - challenge
    volumes:
      - /var/www/html:/usr/share/nginx/html

volumes:
  lets_encrypt:
    driver: local
  
  ctfd_data:
    driver: local

  logs:
    driver: local

  #web_content:
  #  driver: local

networks:
  backend:
    name: backend
    #internal: true

  frontend:
    name: frontend

  challenge:
    external:
      name: challenge
    #internal: true